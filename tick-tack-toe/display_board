
board = ['#', '#', '#', '#', '#', '#', '#', '#', '#', '#']


def display_board(board):
    blankBoard = """
___________________
|     |     |     |
|  7  |  8  |  9  |
|     |     |     |
|-----------------|
|     |     |     |
|  4  |  5  |  6  |
|     |     |     |
|-----------------|
|     |     |     |
|  1  |  2  |  3  |
|     |     |     |
|-----------------|
"""
    for i in range(1, 10):
        if (board[i] == 'O' or board[i] == 'X'):
            blankBoard = blankBoard.replace(str(i), board[i])
        else:
            blankBoard = blankBoard.replace(str(i), ' ')
    print(blankBoard)


def player_input():
    player1 = input("please pick a marker X or O: ")

    while True:
        if player1.upper() == "X":
            player2 = "O"
            print("You've choosen player1:",
                  player1.upper(), "player2:", player2)
            return player1.upper(), player2
        elif player1.upper() == "O":
            player2 = "X"
            print("You've chossen player1:",
                  player1.upper(), "player2:", player2)
            return player1.upper(), player2
        else:
            player1 = input("You must chose x/X or o/O:")


def place_marker(board, marker, position):
    board[position] = marker

    return board


players = player_input()
player1 = players[0]
player2 = players[1]


def space_check(board, position):
    return board[position] == '#'


def player_choice(board):
    choice = int(input("please select an empry position between 1 and 9 : "))
    while not space_check(board, int(choice)):
        choice = input(
            "this space isn't free. Please choose empty position between 1 and 9")
    return choice


def full_board_check(board):
    return len([x for x in board if x == "#"]) == 1


def win_check(board, mark):
    if board[1] == board[2] == board[3] == mark:
        return True
    if board[4] == board[5] == board[6] == mark:
        return True
    if board[7] == board[8] == board[9] == mark:
        return True
    if board[1] == board[4] == board[7] == mark:
        return True
    if board[2] == board[5] == board[8] == mark:
        return True
    if board[3] == board[6] == board[9] == mark:
        return True
    if board[1] == board[5] == board[9] == mark:
        return True
    if board[3] == board[5] == board[7] == mark:
        return True
    return False


def replay():
    playAgain = input("Do you want to play again (y/n) ? ")
    if playAgain.lower() == 'y':
        return True
    if playAgain.lower() == 'n':
        return False
